name: Apply Bundle (AI)
on:
  workflow_dispatch:
    inputs:
      bundle_b64:
        description: "Base64 of a .zip containing files to apply at repo root"
        required: true
      branch_name:
        description: "Target branch for PR (auto if empty)"
        required: false
        default: ""
      pr_title:
        description: "PR title"
        required: false
        default: "AI bundle: apply changes"
      mode:
        description: "merge (overlay) or replace (dangerous: wipes matching files first)"
        required: false
        default: "merge"

jobs:
  apply:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decode bundle.zip
        shell: bash
        run: |
          echo "${{ inputs.bundle_b64 }}" | base64 -d > bundle.zip
          unzip -o bundle.zip -d _bundle

      - name: Prepare branch
        shell: bash
        run: |
          set -e
          TS=$(date +%Y%m%d-%H%M%S)
          BR="${{ inputs.branch_name }}"
          if [ -z "$BR" ]; then BR="ai/bundle-$TS"; fi
          git checkout -b "$BR"
          echo "BRANCH=$BR" >> $GITHUB_ENV

      - name: Apply (merge/replace)
        shell: bash
        run: |
          set -e
          MODE="${{ inputs.mode }}"
          if [ "$MODE" = "replace" ]; then
            # remove files that exist in bundle before copying
            (cd _bundle && find . -type f -print0) | while IFS= read -r -d '' f; do
              tgt="${GITHUB_WORKSPACE}/${f#./}"
              if [ -f "$tgt" ]; then rm -f "$tgt"; fi
            done
          fi
          rsync -a --delete-excluded _bundle/ ./

      - name: Commit
        shell: bash
        run: |
          git config user.name "commenthq-bot"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."; exit 0
          fi
          git commit -m "${{ inputs.pr_title }}"
          git push --set-upstream origin "$BRANCH"

      - name: Create PR
        if: ${{ success() }}
        uses: peter-evans/create-pull-request@v6
        with:
          title: ${{ inputs.pr_title }}
          branch: ${{ env.BRANCH }}
          base: main
          commit-message: ${{ inputs.pr_title }}
          body: |
            Changes applied from uploaded bundle.
