name: Build BundleMe GUI (Windows)

on:
  workflow_dispatch:
  push:
    paths:
      - "tools/bundleme-gui/**"

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
        working-directory: tools/bundleme-gui

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.19.4"

      # Ensure a lockfile exists (so cache key is stable) before we restore any cache
      - name: Ensure lockfile if missing
        run: |
          if (-not (Test-Path package-lock.json)) {
            npm install --package-lock-only --no-audit --no-fund
          }

      # Detect the real npm cache dir on this runner (it’s often C:\npm\cache on GH Windows images)
      - name: Detect npm cache dir
        id: npm-cache
        run: |
          $dir = (npm config get cache).Trim()
          "dir=$dir" >> $env:GITHUB_OUTPUT

      # Make sure the directory exists so actions/cache doesn’t complain
      - name: Ensure npm cache dir exists
        run: |
          New-Item -ItemType Directory -Force -Path "${{ steps.npm-cache.outputs.dir }}" | Out-Null

      # Restore npm cache, now that dir + lockfile exist
      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('tools/bundleme-gui/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install deps
        run: npm ci --no-audit --no-fund

      - name: Verify electron-builder
        run: npx electron-builder --version

      - name: Build EXE (portable)
        run: npm run build:win

      - name: List dist
        run: Get-ChildItem -Force dist

      - name: Upload GUI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: CommentHQ-BundleMe-GUI
          path: tools/bundleme-gui/dist/*.exe
          if-no-files-found: error

      - name: Emit telemetry
        run: |
          New-Item -ItemType Directory -Force -Path .commenthq | Out-Null
          $meta = @{
            repo = "${{ github.repository }}"
            runId = "${{ github.run_id }}"
            sha = "${{ github.sha }}"
            os = "${{ runner.os }}"
            node = (node -v)
            npm = (npm -v)
            builtAt = (Get-Date -Format o)
            artifact = (Get-ChildItem dist -Filter *.exe | Select-Object -First 1 | ForEach-Object { $_.Name })
          } | ConvertTo-Json -Depth 5
          $meta | Set-Content .commenthq/telemetry.json -Encoding UTF8
          "# Build Telemetry`n`n```json`n$meta`n```" | Set-Content .commenthq/TELEMETRY.md -Encoding UTF8

      - name: Upload telemetry
        uses: actions/upload-artifact@v4
        with:
          name: CommentHQ-BundleMe-GUI-Telemetry
          path: tools/bundleme-gui/.commenthq/*
          if-no-files-found: error
